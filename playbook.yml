---
- name: Deploy Yii2 Docker App using Docker Swarm
  hosts: localhost
  become: yes

  tasks:
    # Step 1: Install necessary packages
    - name: Install required packages
      apt:
        name:
          - git
          - nginx
        state: present
        update_cache: yes

    - name: Ensure Docker is running
      service:
        name: docker
        state: started

    # Step 2: Clone the repo into a specific directory
    - name: Remove existing repo if any
      file:
        path: /home/ubuntu/yii2-advanced-test
        state: absent

    - name: Clone the Yii2 repo
      git:
        repo: https://github.com/yiisoft/yii2-app-advanced.git
        dest: /home/ubuntu/yii2-advanced-test
        version: master

    # Step 3: Run commands in the repo folder
    - name: Run composer install inside the backend container
      shell: docker-compose run --rm backend composer install --no-interaction
      args:
        chdir: /home/ubuntu/yii2-advanced-test

    - name: Initialize the application
      shell: docker-compose run --rm backend php /app/init --env=Development --overwrite=All
      args:
        chdir: /home/ubuntu/yii2-advanced-test

    - name: Copy DB Config
      copy:
        src: main-local.php.j2
        dest: /home/ubuntu/yii2-advanced-test/common/config/main-local.php

    - name: Deploy using docker-compose
      shell: docker-compose up -d
      args:
        chdir: /home/ubuntu/yii2-advanced-test

    - name: Run migrations
      shell: docker-compose run --rm backend php yii migrate --interactive=0
      args:
        chdir: /home/ubuntu/yii2-advanced-test

    # Step 4: Deploy services using docker-compose

    # Step 5: Convert services to Docker Swarm
    - name: Initialize Docker Swarm (if not already initialized)
      shell: docker swarm init || true

    - name: Deploy stack using Docker Swarm
      shell: docker stack deploy -c docker-compose.yml yii2app
      args:
        chdir: /home/ubuntu/yii2-advanced-test

    # Step 6: Ensure NGINX reverse proxy configuration
    - name: Configure NGINX reverse proxy
      copy:
        dest: /etc/nginx/sites-available/yii2app
        content: |
          server {
              listen 80;
              location / {
                  proxy_pass http://localhost:21080;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }
          }

    - name: Enable NGINX site
      file:
        src: /etc/nginx/sites-available/yii2app
        dest: /etc/nginx/sites-enabled/yii2app
        state: link
        force: yes

    - name: Remove default NGINX site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test NGINX config
      shell: nginx -t

    - name: Restart NGINX
      service:
        name: nginx
        state: restarted

